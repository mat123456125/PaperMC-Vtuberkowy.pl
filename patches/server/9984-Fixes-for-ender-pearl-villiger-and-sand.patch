From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mateusz Jarzemski <mat123456125@gmail.com>
Date: Wed, 2 Feb 2022 22:11:54 +0100
Subject: [PATCH] Fixes for ender pearl, villiger and sand


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 6abaf7ef99800a238b29dbbb85de8c970c0806a7..7a6c1fff450577c7dde08d8cbc4915c02df74691 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -530,36 +530,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         return chunkMap.playerEntityTrackerTrackMaps[type.ordinal()].getObjectsInRange(MCUtil.getCoordinateKey(this));
     }
     // Paper end - optimise entity tracking
-    // Paper start - make end portalling safe
-    public BlockPos portalBlock;
-    public ServerLevel portalWorld;
-    public void tickEndPortal() {
-        BlockPos pos = this.portalBlock;
-        ServerLevel world = this.portalWorld;
-        this.portalBlock = null;
-        this.portalWorld = null;
-
-        if (pos == null || world == null || world != this.level) {
-            return;
-        }
-
-        if (this.isPassenger() || this.isVehicle() || !this.canChangeDimensions() || this.isRemoved() || !this.valid || !this.isAlive()) {
-            return;
-        }
 
-        ResourceKey<Level> resourcekey = world.getTypeKey() == LevelStem.END ? Level.OVERWORLD : Level.END; // CraftBukkit - SPIGOT-6152: send back to main overworld in custom ends
-        ServerLevel worldserver = world.getServer().getLevel(resourcekey);
-
-        org.bukkit.event.entity.EntityPortalEnterEvent event = new org.bukkit.event.entity.EntityPortalEnterEvent(this.getBukkitEntity(), new org.bukkit.Location(world.getWorld(), pos.getX(), pos.getY(), pos.getZ()));
-        event.callEvent();
-
-        if (this instanceof ServerPlayer) {
-            ((ServerPlayer)this).changeDimension(worldserver, PlayerTeleportEvent.TeleportCause.END_PORTAL);
-            return;
-        }
-        this.teleportTo(worldserver, null);
-    }
-    // Paper end - make end portalling safe
 
     public Entity(EntityType<?> type, Level world) {
         this.id = Entity.ENTITY_COUNTER.incrementAndGet();
@@ -3079,7 +3050,6 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
             }
 
             this.processPortalCooldown();
-            this.tickEndPortal(); // Paper - make end portalling safe
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java b/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
index 097007c1c25ba55d9916fc820dd1d1149d81f6f4..8d4526f804e1b85d951a34a80c29820aa6675a9b 100644
--- a/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
+++ b/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
@@ -31,6 +31,7 @@ public class GossipContainer {
     private static final Logger LOGGER = LogUtils.getLogger();
     public static final int DISCARD_THRESHOLD = 2;
     public final Map<UUID, GossipContainer.EntityGossips> gossips = Maps.newHashMap();
+    private final UUID globalGossipsId = UUID.fromString("38400000-8cf0-11bd-b23e-10b96e4ef00d");
 
     @VisibleForDebug
     public Map<UUID, Object2IntMap<GossipType>> getGossipEntries() {
@@ -117,6 +118,14 @@ public class GossipContainer {
 
         });
     }
+    public int getGlobalReputation()
+    {
+        GossipContainer.EntityGossips entityGossips = this.gossips.get(globalGossipsId);
+        Predicate<GossipType> gossipTypeFilter = (reputationtype) -> {
+            return true;
+        };
+        return entityGossips != null ? entityGossips.weightedValue(gossipTypeFilter) : 0;
+    }
 
     public int getReputation(UUID target, Predicate<GossipType> gossipTypeFilter) {
         GossipContainer.EntityGossips entityGossips = this.gossips.get(target);
@@ -129,6 +138,12 @@ public class GossipContainer {
         }).count();
     }
 
+    public void addWithGlobal(UUID target, GossipType type, int value)
+    {
+        this.add(globalGossipsId, type, value);
+        this.add(target, type, value);
+    }
+
     public void add(UUID target, GossipType type, int value) {
         GossipContainer.EntityGossips entityGossips = this.getOrCreate(target);
         entityGossips.entries.mergeInt(type, value, (left, right) -> {
diff --git a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
index eff81e846f696349b3bd3d26c02442f157b169f0..acfc786d1d0d932dd98530782f6765b1a825f681 100644
--- a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
@@ -130,11 +130,7 @@ public class FallingBlockEntity extends Entity {
 
     @Override
     public void tick() {
-        // Paper start - fix sand duping
-        if (this.isRemoved()) {
-            return;
-        }
-        // Paper end - fix sand duping
+
         if (this.blockState.isAir()) {
             this.discard();
         } else {
@@ -147,11 +143,6 @@ public class FallingBlockEntity extends Entity {
 
             this.move(MoverType.SELF, this.getDeltaMovement());
 
-            // Paper start - fix sand duping
-            if (this.isRemoved()) {
-                return;
-            }
-            // Paper end - fix sand duping
 
             // Paper start - Configurable EntityFallingBlock height nerf
             if (this.level().paperConfig().fixes.fallingBlockHeightNerf.test(v -> this.getY() > v)) {
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index e30d5ae3e2900f43d7cafde71b8196f26e872841..2da2ec1fb3869d4284091bda8bb1bf0bda06fca4 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -500,7 +500,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }
 
     private void updateSpecialPrices(Player player) {
-        int i = this.getPlayerReputation(player);
+        int i = this.getPlayerReputation(null);  // get global reputation
 
         if (i != 0) {
             Iterator iterator = this.getOffers().iterator();
@@ -777,6 +777,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }
 
     public int getPlayerReputation(Player player) {
+        if(player == null) return this.gossips.getGlobalReputation();
         return this.gossips.getReputation(player.getUUID(), (reputationtype) -> {
             return true;
         });
@@ -1017,14 +1018,14 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
                 }
             }
             // Paper end
-            this.gossips.add(entity.getUUID(), GossipType.MAJOR_POSITIVE, 20);
-            this.gossips.add(entity.getUUID(), GossipType.MINOR_POSITIVE, 25);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MAJOR_POSITIVE, 20);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MINOR_POSITIVE, 25);
         } else if (interaction == ReputationEventType.TRADE) {
-            this.gossips.add(entity.getUUID(), GossipType.TRADING, 2);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.TRADING, 2);
         } else if (interaction == ReputationEventType.VILLAGER_HURT) {
-            this.gossips.add(entity.getUUID(), GossipType.MINOR_NEGATIVE, 25);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MINOR_NEGATIVE, 25);
         } else if (interaction == ReputationEventType.VILLAGER_KILLED) {
-            this.gossips.add(entity.getUUID(), GossipType.MAJOR_NEGATIVE, 25);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MAJOR_NEGATIVE, 25);
         }
 
     }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
index e8114d89a3129e56c0329410a49ded63cc77cb4c..783cd2280a919eef5c62b348b17ea3aeb487099f 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
@@ -104,7 +104,7 @@ public class ThrownEnderpearl extends ThrowableItemProjectile {
         Entity entity = this.getOwner();
 
         if (entity instanceof Player && !entity.isAlive()) {
-            this.discard();
+            //this.discard(); // no remove on death
         } else {
             super.tick();
         }
diff --git a/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java b/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
index 41d7cff39fc37955877668337689b4b26cd8c7cf..15befa17ec954a54d4f2cb380a58a879e8f03f8f 100644
--- a/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
@@ -53,10 +53,16 @@ public class EndPortalBlock extends BaseEntityBlock {
                 // return; // CraftBukkit - always fire event in case plugins wish to change it
             }
 
-            // Paper start - move all of this logic into portal tick
-            entity.portalWorld = ((ServerLevel)world);
-            entity.portalBlock = pos.immutable();
-            // Paper end - move all of this logic into portal tick
+            // CraftBukkit start - Entity in portal
+            EntityPortalEnterEvent event = new EntityPortalEnterEvent(entity.getBukkitEntity(), new org.bukkit.Location(world.getWorld(), pos.getX(), pos.getY(), pos.getZ()));
+            world.getCraftServer().getPluginManager().callEvent(event);
+
+                if (entity instanceof ServerPlayer) {
+                    ((ServerPlayer) entity).changeDimension(worldserver, PlayerTeleportEvent.TeleportCause.END_PORTAL);
+                    return;
+                }
+            // CraftBukkit end
+            entity.changeDimension(worldserver);
         }
 
     }
