From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mateusz Jarzemski <mat123456125@gmail.com>
Date: Tue, 14 May 2024 04:27:29 +0200
Subject: [PATCH] Fixes for ender pearl, villiger and sand


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 2bc85351e6e52f90da5fdb29d8d042a06132d742..26dbbbd68bc2612eb436f8a32429b77bc892da0a 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -442,36 +442,6 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         return this.originWorld;
     }
     // Paper end - Entity origin API
-    // Paper start - make end portalling safe
-    public BlockPos portalBlock;
-    public ServerLevel portalWorld;
-    public void tickEndPortal() {
-        BlockPos pos = this.portalBlock;
-        ServerLevel world = this.portalWorld;
-        this.portalBlock = null;
-        this.portalWorld = null;
-
-        if (pos == null || world == null || world != this.level) {
-            return;
-        }
-
-        if (this.isPassenger() || this.isVehicle() || !this.canChangeDimensions() || this.isRemoved() || !this.valid || !this.isAlive()) {
-            return;
-        }
-
-        ResourceKey<Level> resourcekey = world.getTypeKey() == LevelStem.END ? Level.OVERWORLD : Level.END; // CraftBukkit - SPIGOT-6152: send back to main overworld in custom ends
-        ServerLevel worldserver = world.getServer().getLevel(resourcekey);
-
-        org.bukkit.event.entity.EntityPortalEnterEvent event = new org.bukkit.event.entity.EntityPortalEnterEvent(this.getBukkitEntity(), new org.bukkit.Location(world.getWorld(), pos.getX(), pos.getY(), pos.getZ()));
-        event.callEvent();
-
-        if (this instanceof ServerPlayer) {
-            ((ServerPlayer) this).changeDimension(worldserver, PlayerTeleportEvent.TeleportCause.END_PORTAL);
-            return;
-        }
-        this.teleportTo(worldserver, null);
-    }
-    // Paper end - make end portalling safe
     // Paper start - optimise entity tracking
     final org.spigotmc.TrackingRange.TrackingRangeType trackingRangeType = org.spigotmc.TrackingRange.getTrackingRangeType(this);
 
@@ -3253,7 +3223,6 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
             }
 
             this.processPortalCooldown();
-            if (!io.papermc.paper.configuration.GlobalConfiguration.get().unsupportedSettings.allowUnsafeEndPortalTeleportation) this.tickEndPortal(); // Paper - make end portalling safe
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java b/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
index c7f012674361a323c1efeca4660cd3f46d308ee1..61e8f21f2a193ae62a5d1dc823cf5632434e4b64 100644
--- a/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
+++ b/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
@@ -32,6 +32,7 @@ public class GossipContainer {
     private static final Logger LOGGER = LogUtils.getLogger();
     public static final int DISCARD_THRESHOLD = 2;
     public final Map<UUID, GossipContainer.EntityGossips> gossips = Maps.newHashMap();
+    private final UUID globalGossipsId = UUID.fromString("38400000-8cf0-11bd-b23e-10b96e4ef00d");
 
     @VisibleForDebug
     public Map<UUID, Object2IntMap<GossipType>> getGossipEntries() {
@@ -112,6 +113,14 @@ public class GossipContainer {
             }
         });
     }
+    public int getGlobalReputation()
+    {
+        GossipContainer.EntityGossips entityGossips = this.gossips.get(globalGossipsId);
+        Predicate<GossipType> gossipTypeFilter = (reputationtype) -> {
+            return true;
+        };
+        return entityGossips != null ? entityGossips.weightedValue(gossipTypeFilter) : 0;
+    }
 
     public int getReputation(UUID target, Predicate<GossipType> gossipTypeFilter) {
         GossipContainer.EntityGossips entityGossips = this.gossips.get(target);
@@ -122,6 +131,12 @@ public class GossipContainer {
         return this.gossips.values().stream().filter(reputation -> predicate.test((double)(reputation.entries.getOrDefault(type, 0) * type.weight))).count();
     }
 
+    public void addWithGlobal(UUID target, GossipType type, int value)
+    {
+        this.add(globalGossipsId, type, value);
+        this.add(target, type, value);
+    }
+
     public void add(UUID target, GossipType type, int value) {
         GossipContainer.EntityGossips entityGossips = this.getOrCreate(target);
         entityGossips.entries.mergeInt(type, value, (left, right) -> this.mergeValuesForAddition(type, left, right));
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index a7930f9875aa4aca997caaead46ecdc21e5e11d7..4d47beb29e7a200b7a4c9929b39a674a58c77dfb 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -502,7 +502,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }
 
     private void updateSpecialPrices(Player player) {
-        int i = this.getPlayerReputation(player);
+        int i = this.getPlayerReputation(null);  // get global reputation
 
         if (i != 0) {
             Iterator iterator = this.getOffers().iterator();
@@ -771,6 +771,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }
 
     public int getPlayerReputation(Player player) {
+        if(player == null) return this.gossips.getGlobalReputation();
         return this.gossips.getReputation(player.getUUID(), (reputationtype) -> {
             return true;
         });
@@ -1010,14 +1011,14 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     @Override
     public void onReputationEventFrom(ReputationEventType interaction, Entity entity) {
         if (interaction == ReputationEventType.ZOMBIE_VILLAGER_CURED) {
-            this.gossips.add(entity.getUUID(), GossipType.MAJOR_POSITIVE, 20);
-            this.gossips.add(entity.getUUID(), GossipType.MINOR_POSITIVE, 25);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MAJOR_POSITIVE, 20);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MINOR_POSITIVE, 25);
         } else if (interaction == ReputationEventType.TRADE) {
-            this.gossips.add(entity.getUUID(), GossipType.TRADING, 2);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.TRADING, 2);
         } else if (interaction == ReputationEventType.VILLAGER_HURT) {
-            this.gossips.add(entity.getUUID(), GossipType.MINOR_NEGATIVE, 25);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MINOR_NEGATIVE, 25);
         } else if (interaction == ReputationEventType.VILLAGER_KILLED) {
-            this.gossips.add(entity.getUUID(), GossipType.MAJOR_NEGATIVE, 25);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MAJOR_NEGATIVE, 25);
         }
 
     }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
index 519755b7f8bc7e8bb9fab135fc5bf7de3a9419f9..d90411ad2f640d291fa30c6a6d034391e095c156 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
@@ -104,11 +104,9 @@ public class ThrownEnderpearl extends ThrowableItemProjectile {
     public void tick() {
         Entity entity = this.getOwner();
 
-        if (entity instanceof ServerPlayer && !entity.isAlive() && this.level().getGameRules().getBoolean(GameRules.RULE_ENDER_PEARLS_VANISH_ON_DEATH)) {
-            this.discard(EntityRemoveEvent.Cause.DESPAWN); // CraftBukkit - add Bukkit remove cause
-        } else {
-            super.tick();
-        }
+        // no remove on death
+        super.tick();
+
 
     }
 
diff --git a/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java b/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
index 7272d70c672b54dcf595beafd7a2ed33c96e35cb..03f186dd1637920d8084c16b89173af185e1c600 100644
--- a/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
@@ -61,13 +61,16 @@ public class EndPortalBlock extends BaseEntityBlock {
                 // return; // CraftBukkit - always fire event in case plugins wish to change it
             }
 
-            // Paper start - move all of this logic into portal tick
-            entity.portalWorld = ((ServerLevel)world);
-            entity.portalBlock = pos.immutable();
-            if (io.papermc.paper.configuration.GlobalConfiguration.get().unsupportedSettings.allowUnsafeEndPortalTeleportation) {
-                entity.tickEndPortal();
-            }
-            // Paper end - move all of this logic into portal tick
+            // CraftBukkit start - Entity in portal
+            EntityPortalEnterEvent event = new EntityPortalEnterEvent(entity.getBukkitEntity(), new org.bukkit.Location(world.getWorld(), pos.getX(), pos.getY(), pos.getZ()));
+            world.getCraftServer().getPluginManager().callEvent(event);
+
+                if (entity instanceof ServerPlayer) {
+                    ((ServerPlayer) entity).changeDimension(worldserver, PlayerTeleportEvent.TeleportCause.END_PORTAL);
+                    return;
+                }
+            // CraftBukkit end
+            entity.changeDimension(worldserver);
         }
 
     }
