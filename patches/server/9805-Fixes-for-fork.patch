From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mateusz Jarzemski <mat>
Date: Sat, 28 Aug 2021 00:29:28 +0200
Subject: [PATCH] Fixes for fork


diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index f421e6a2e43e0a673dbb8a9a2b4331387e523e02..66e348d998d8872cc6374bc60779d31b1542be4e 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -446,10 +446,15 @@ public class PaperConfig {
         deobfuscateStacktraces = getBoolean("settings.loggers.deobfuscate-stacktraces", deobfuscateStacktraces);
     }
 
-    public static boolean allowBlockPermanentBreakingExploits = false;
+    public static int midTickChunkTasks = 1000;
+    private static void midTickChunkTasks() {
+        midTickChunkTasks = getInt("settings.chunk-tasks-per-tick", midTickChunkTasks);
+    }
+
+    public static boolean allowBlockPermanentBreakingExploits = true;
     private static void allowBlockPermanentBreakingExploits() {
         if (config.contains("allow-perm-block-break-exploits")) {
-            allowBlockPermanentBreakingExploits = config.getBoolean("allow-perm-block-break-exploits", false);
+            allowBlockPermanentBreakingExploits = config.getBoolean("allow-perm-block-break-exploits", true);
             config.set("allow-perm-block-break-exploits", null);
         }
 
diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 9a3f75288b1d743a7ec4bfd663c1c2988678d3e6..7c638093d19e35d27b6412e141e4d06bb3a1583d 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -107,7 +107,7 @@ public class PaperWorldConfig {
         fixClimbingBypassingCrammingRule = getBoolean("fix-climbing-bypassing-cramming-rule", fixClimbingBypassingCrammingRule);
     }
 
-    public boolean fixCuringZombieVillagerDiscountExploit = true;
+    public boolean fixCuringZombieVillagerDiscountExploit = false;
     private void fixCuringExploit() {
         fixCuringZombieVillagerDiscountExploit = getBoolean("game-mechanics.fix-curing-zombie-villager-discount-exploit", fixCuringZombieVillagerDiscountExploit);
     }
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 94857a736d2a16e8ade286c6f2ddf8bd798008eb..733782123c07175ea515b96980c97ad687bd0c13 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -386,37 +386,6 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
     }
     // Paper end - optimise entity tracking
 
-    // Paper start - make end portalling safe
-    public BlockPos portalBlock;
-    public ServerLevel portalWorld;
-    public void tickEndPortal() {
-        BlockPos pos = this.portalBlock;
-        ServerLevel world = this.portalWorld;
-        this.portalBlock = null;
-        this.portalWorld = null;
-
-        if (pos == null || world == null || world != this.level) {
-            return;
-        }
-
-        if (this.isPassenger() || this.isVehicle() || !this.canChangeDimensions() || this.isRemoved() || !this.valid || !this.isAlive()) {
-            return;
-        }
-
-        ResourceKey<Level> resourcekey = world.getTypeKey() == DimensionType.END_LOCATION ? Level.OVERWORLD : Level.END; // CraftBukkit - SPIGOT-6152: send back to main overworld in custom ends
-        ServerLevel worldserver = world.getServer().getLevel(resourcekey);
-
-        org.bukkit.event.entity.EntityPortalEnterEvent event = new org.bukkit.event.entity.EntityPortalEnterEvent(this.getBukkitEntity(), new org.bukkit.Location(world.getWorld(), pos.getX(), pos.getY(), pos.getZ()));
-        event.callEvent();
-
-        if (this instanceof ServerPlayer) {
-            ((ServerPlayer)this).changeDimension(worldserver, PlayerTeleportEvent.TeleportCause.END_PORTAL);
-            return;
-        }
-        this.teleportTo(worldserver, null);
-    }
-    // Paper end - make end portalling safe
-
     // Paper start
     /**
      * Overriding this field will cause memory leaks.
@@ -2738,7 +2707,6 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource, n
             }
 
             this.processPortalCooldown();
-            this.tickEndPortal(); // Paper - make end portalling safe
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java b/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
index 2d124ff784b943f5a9d164ee7cdc001465502ce4..b57a78a4cb015828dad2804833f938e8c8f35cbc 100644
--- a/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
+++ b/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
@@ -31,6 +31,7 @@ import net.minecraft.util.VisibleForDebug;
 public class GossipContainer {
     public static final int DISCARD_THRESHOLD = 2;
     private final Map<UUID, GossipContainer.EntityGossips> gossips = Maps.newHashMap(); public Map<UUID, GossipContainer.EntityGossips> getReputations() { return this.gossips; } // Paper - add getter for reputations
+    private final UUID globalGossipsId = UUID.fromString("38400000-8cf0-11bd-b23e-10b96e4ef00d");
 
     @VisibleForDebug
     public Map<UUID, Object2IntMap<GossipType>> getGossipEntries() {
@@ -116,6 +117,14 @@ public class GossipContainer {
 
         });
     }
+    public int getGlobalReputation()
+    {
+        GossipContainer.EntityGossips entityGossips = this.gossips.get(globalGossipsId);
+        Predicate<GossipType> gossipTypeFilter = (reputationtype) -> {
+            return true;
+        };
+        return entityGossips != null ? entityGossips.weightedValue(gossipTypeFilter) : 0;
+    }
 
     public int getReputation(UUID target, Predicate<GossipType> gossipTypeFilter) {
         GossipContainer.EntityGossips entityGossips = this.gossips.get(target);
@@ -128,6 +137,12 @@ public class GossipContainer {
         }).count();
     }
 
+    public void addWithGlobal(UUID target, GossipType type, int value)
+    {
+        this.add(globalGossipsId, type, value);
+        this.add(target, type, value);
+    }
+
     public void add(UUID target, GossipType type, int value) {
         GossipContainer.EntityGossips entityGossips = this.getOrCreate(target);
         entityGossips.entries.mergeInt(type, value, (integer, integer2) -> {
diff --git a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
index 8336ea928faa92c6f58f8cdfb9faf1d8e26c9ccf..c2db0485b7157fbe16e82eba402747209dfb6aa7 100644
--- a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
@@ -106,11 +106,7 @@ public class FallingBlockEntity extends Entity {
 
     @Override
     public void tick() {
-        // Paper start - fix sand duping
-        if (this.isRemoved()) {
-            return;
-        }
-        // Paper end - fix sand duping
+
         if (this.blockState.isAir()) {
             this.discard();
         } else {
@@ -143,11 +139,7 @@ public class FallingBlockEntity extends Entity {
 
             this.move(MoverType.SELF, this.getDeltaMovement());
 
-            // Paper start - fix sand duping
-            if (this.isRemoved()) {
-                return;
-            }
-            // Paper end - fix sand duping
+
 
             // Paper start - Configurable EntityFallingBlock height nerf
             if (this.level.paperConfig.fallingBlockHeightNerf != 0 && this.getY() > this.level.paperConfig.fallingBlockHeightNerf) {
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index eaefa4f5f86f1c836aa29dd64ea786baced4b34d..8a9b4ca14ea80855956f13da8029201bd6641283 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -467,7 +467,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }
 
     private void updateSpecialPrices(Player player) {
-        int i = this.getPlayerReputation(player);
+        int i = this.getPlayerReputation(null);  // get global reputation
 
         if (i != 0) {
             Iterator iterator = this.getOffers().iterator();
@@ -749,6 +749,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }
 
     public int getPlayerReputation(Player player) {
+        if(player == null) return this.gossips.getGlobalReputation();
         return this.gossips.getReputation(player.getUUID(), (reputationtype) -> {
             return true;
         });
@@ -1065,14 +1066,14 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
                 }
             }
             // Paper end
-            this.gossips.add(entity.getUUID(), GossipType.MAJOR_POSITIVE, 20);
-            this.gossips.add(entity.getUUID(), GossipType.MINOR_POSITIVE, 25);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MAJOR_POSITIVE, 20);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MINOR_POSITIVE, 25);
         } else if (interaction == ReputationEventType.TRADE) {
-            this.gossips.add(entity.getUUID(), GossipType.TRADING, 2);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.TRADING, 2);
         } else if (interaction == ReputationEventType.VILLAGER_HURT) {
-            this.gossips.add(entity.getUUID(), GossipType.MINOR_NEGATIVE, 25);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MINOR_NEGATIVE, 25);
         } else if (interaction == ReputationEventType.VILLAGER_KILLED) {
-            this.gossips.add(entity.getUUID(), GossipType.MAJOR_NEGATIVE, 25);
+            this.gossips.addWithGlobal(entity.getUUID(), GossipType.MAJOR_NEGATIVE, 25);
         }
 
     }
diff --git a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
index 1b2ada3663cc0739782ac591f2ee1f6d0fb94841..4938b338e07a058e922a682580f3d8383e19159e 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/ThrownEnderpearl.java
@@ -103,7 +103,7 @@ public class ThrownEnderpearl extends ThrowableItemProjectile {
         Entity entity = this.getOwner();
 
         if (entity instanceof Player && !entity.isAlive()) {
-            this.discard();
+            //this.discard();
         } else {
             super.tick();
         }
diff --git a/src/main/java/net/minecraft/world/level/Explosion.java b/src/main/java/net/minecraft/world/level/Explosion.java
index 132140e00865fcf84ebe03ffcbc2f30ac11a0b35..9292b70385d60fa440284f0652f3d5dc9c158a91 100644
--- a/src/main/java/net/minecraft/world/level/Explosion.java
+++ b/src/main/java/net/minecraft/world/level/Explosion.java
@@ -249,7 +249,7 @@ public class Explosion {
                         entity.forceExplosionKnockback = false;
                         boolean wasDamaged = entity.hurt(this.getDamageSource(), (float) ((int) ((d13 * d13 + d13) / 2.0D * 7.0D * (double) f2 + 1.0D)));
                         CraftEventFactory.entityDamage = null;
-                        if (!wasDamaged && !(entity instanceof PrimedTnt || entity instanceof FallingBlockEntity) && !entity.forceExplosionKnockback) {
+                        if (!wasDamaged && !(entity instanceof PrimedTnt || entity instanceof FallingBlockEntity || entity instanceof Projectile) && !entity.forceExplosionKnockback) {
                             continue;
                         }
                         // CraftBukkit end
diff --git a/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java b/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
index 62c2f947a77570228dfdf4dae16c64eb97ee2f40..739c9c3a49fd3893ac39962a02a5e3620dc4fe06 100644
--- a/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
@@ -53,10 +53,16 @@ public class EndPortalBlock extends BaseEntityBlock {
                 // return; // CraftBukkit - always fire event in case plugins wish to change it
             }
 
-            // Paper start - move all of this logic into portal tick
-            entity.portalWorld = ((ServerLevel)world);
-            entity.portalBlock = pos.immutable();
-            // Paper end - move all of this logic into portal tick
+            // CraftBukkit start - Entity in portal
+            EntityPortalEnterEvent event = new EntityPortalEnterEvent(entity.getBukkitEntity(), new org.bukkit.Location(world.getWorld(), pos.getX(), pos.getY(), pos.getZ()));
+            world.getCraftServer().getPluginManager().callEvent(event);
+
+            if (entity instanceof ServerPlayer) {
+                ((ServerPlayer) entity).changeDimension(worldserver, PlayerTeleportEvent.TeleportCause.END_PORTAL);
+                return;
+            }
+            // CraftBukkit end
+            entity.changeDimension(worldserver);
         }
 
     }
